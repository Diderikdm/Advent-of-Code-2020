import itertools
def find(val):
    temp = []
    if '"' in val:
        return [[val.strip('"')],[]]
    elif '|' in val:
        for pair in val.split(' | '):
            temp.append([find(rules[x]) for x in pair.split(' ')])
    else:
        temp.append([find(rules[x]) for x in val.split(' ')])
    return [[''.join(list(x)) for x in itertools.product(*[sum(z,[]) for z in y])] for y in temp]

with open("C:\\Advent\\day19.txt", 'r') as file:
    ruledata, data = [x.split('\n') for x in file.read().split('\n\n')]
    rules = {x.split(':')[0] : x.split(': ')[1] for x in ruledata}
    result, eight, eleven = find(rules['0']), find(rules['8'])[0], find(rules['11'])[0]
    print('Part 1: {}'.format(len([x for x in data if x in result[0]])))
    valids = []
    for y in data:    
        for x in range(len(max(eleven)), len(y), len(max(eleven))):
            elevens = int(x/len(max(eleven)))
            eights = int((len(y) - elevens*len(max(eleven)))/len(max(eight)))
            for z in range(1, eights+1):
                if not y[int(len(max(eight))*z-len(max(eight))):int(len(max(eight))*z)] in eight:
                    break
            else:
                w = y[eights*len(max(eight)):]
                for z in range(1, elevens+1):
                    if not w[:int(len(max(eleven))/2)]+w[-int(len(max(eleven))/2):] in eleven:
                        break
                    w = w[int(len(max(eleven))/2):-int(len(max(eleven))/2)]
                else:
                     valids.append(y)
                     break
    print('Part 2: {}'.format(len(valids)))
